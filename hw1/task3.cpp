#include <iostream>

int main() {
    std::cout << "alignas\t (since C++11)\n"
                 "alignof\t (since C++11)\n"
                 "and\n"
                 "and_eq\n"
                 "asm\n"
                 "atomic_cancel\t (TM TS)\n"
                 "atomic_commit\t (TM TS)\n"
                 "atomic_noexcept\t (TM TS)\n"
                 "auto\t (1)\n"
                 "bitand\n"
                 "bitor\n"
                 "bool\n"
                 "break\n"
                 "case\n"
                 "catch\n"
                 "char\n"
                 "char8_t\t (since C++20)\n"
                 "char16_t\t (since C++11)\n"
                 "char32_t\t (since C++11)\n"
                 "class\t (1)\n"
                 "compl\n"
                 "concept\t (since C++20)\n"
                 "const\n"
                 "consteval\t (since C++20)\n"
                 "constexpr\t (since C++11)\n"
                 "constinit\t (since C++20)\n"
                 "const_cast\n"
                 "continue\n"
                 "co_await\t (since C++20)\n"
                 "co_return\t (since C++20)\n"
                 "co_yield\t (since C++20)\n"
                 "decltype\t (since C++11)\n"
                 "default\t (1)\n"
                 "delete\t (1)\n"
                 "do\n"
                 "double\n"
                 "dynamic_cast\n"
                 "else\n"
                 "enum\n"
                 "explicit\n"
                 "export\t (1)\t (3)\n"
                 "extern\t (1)\n"
                 "false\n"
                 "float\n"
                 "for\n"
                 "friend\n"
                 "goto\n"
                 "if\n"
                 "inline\t (1)\n"
                 "int\n"
                 "long\n"
                 "mutable\t (1)\n"
                 "namespace\n"
                 "new\n"
                 "noexcept\t (since C++11)\n"
                 "not\n"
                 "not_eq\n"
                 "nullptr\t (since C++11)\n"
                 "operator\n"
                 "or\n"
                 "or_eq\n"
                 "private\n"
                 "protected\n"
                 "public\n"
                 "reflexpr\t (reflection TS)\n"
                 "register\t (2)\n"
                 "reinterpret_cast\n"
                 "requires\t (since C++20)\n"
                 "return\n"
                 "short\n"
                 "signed\n"
                 "sizeof\t (1)\n"
                 "static\n"
                 "static_assert\t (since C++11)\n"
                 "static_cast\n"
                 "struct\t (1)\n"
                 "switch\n"
                 "synchronized\t (TM TS)\n"
                 "template\n"
                 "this\n"
                 "thread_local\t (since C++11)\n"
                 "throw\n"
                 "true\n"
                 "try\n"
                 "typedef\n"
                 "typeid\n"
                 "typename\n"
                 "union\n"
                 "unsigned\n"
                 "using\t (1)\n"
                 "virtual\n"
                 "void\n"
                 "volatile\n"
                 "wchar_t\n"
                 "while\n"
                 "xor\n"
                 "xor_eq";

    return 0;
}
